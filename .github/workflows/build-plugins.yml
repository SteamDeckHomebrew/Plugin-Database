name: Build Plugins

on:
  push:
    branches:
      - main
    paths:
      - "plugins/**"
      - ".github/workflows/build-plugins.yml"
  pull_request:
    branches: ['*']

jobs:
  build:
    name: Build updated plugins
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        fetch-depth: 0
        submodules: "recursive"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@fb1fe28aa9ff24afc553b37545437005a4cf2115
      with:
        sha: ${{ github.sha }}
        files: |
          plugins/*
          .github/workflows/build-plugins.yml

    - name: Cache Docker images
      uses: satackey/action-docker-layer-caching@46d2c640b1d8ef50d185452ad6fb324e6bd1d052

    - name: Login to GitHub Container Registry
      run: |
        echo $GITHUB_TOKEN | docker login ghcr.io -u SteamDeckHomebrew --password-stdin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Wait for other runs to complete
      uses: softprops/turnstyle@8db075d65b19bf94e6e8687b504db69938dc3c65
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull builder image
      run: docker pull ghcr.io/steamdeckhomebrew/builder:latest

    - name: Log out of GitHub Container Registry
      run: |
        docker logout ghcr.io

    - name: Build plugins
      run: |
        pushd plugins
        files=()
        if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *".github/workflows/build-plugins.yml"* ]]; then
          echo "Rebuilding all plugins due to workflow edit"
          for file in ./plugins/*; do
            files+=($(cut -d/ -f3 <<< $file))
          done
        else
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            files+=($(cut -d/ -f2 <<< $file))
          done
        fi
        for plugin in $(printf "%s\n" "${files[@]}" | sort -u); do
          pushd $plugin
          docker run --rm -i -v $PWD:/plugin -v /tmp/output/$plugin:/out ghcr.io/steamdeckhomebrew/builder:latest
          echo Built $plugin
          ls -lla /tmp/output/$plugin
          popd
        done
        popd
        
    - name: Zip Plugins
      run: |
        shopt -s dotglob
        mkdir -p /tmp/zips/
        for plugin in /tmp/output/*; do
          zipname=/tmp/zips/$(basename ${plugin}).zip
          cd $plugin
          zip -r $zipname * -x "*assets*" -x "*.pnpm-store*" -x "tsconfig.json" -x "rollup.config.js" -x "*.yaml" -x "*.yml" -x "*.vscode*" -x "*.git*" -x "*.jpg" -x "*.png" -x "*.bmp"
        done
      
    - name: Upload PR Artifacts
      uses: actions/upload-artifact@v3
      if: ${{ github.event_name == 'pull_request' }}
      with:
        name: plugins
        path: /tmp/zips/*
      
    - name: Upload plugins
      if: ${{ github.event_name == 'push' }}
      run: |
        shopt -s dotglob
        for plugin in /tmp/output/*; do
          zipname=/tmp/zips/$(basename ${plugin}).zip
          pushd $plugin
          curl -X POST -H "Auth-Key: ${PLUGIN_STORE_KEY}" -F "name=$(jq -r '.name' ./plugin.json)" -F "author=$(jq -r '.author' ./plugin.json)" -F "description=$(jq -r '.publish.description' ./plugin.json)" -F "tags=$(jq -r '.publish.tags|join(",")' ./plugin.json)" -F "version_name=$(jq -r '.version' ./package.json)" -F "image=$(jq -r '.publish.image' ./plugin.json)" -F "file=@${zipname}" https://beta.deckbrew.xyz/__submit
          popd
        done
      env:
        PLUGIN_STORE_KEY: ${{ secrets.PLUGIN_STORE_KEY }}
